<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fullstack4.springmvc.mapper.MemberMapper">

    <sql id="pwdNull">
        <if test="member_pwd != null and member_pwd != ''">
            , member_pwd = #{member_pwd}
        </if>
    </sql>

    <insert id="regist">
        INSERT INTO bec_member (member_id,member_pwd,member_name,member_email,member_addr1,member_addr2,member_phone,member_zonecode,member_mileage,member_reg_date,member_type)
        VALUES ( #{member_id} , #{member_pwd} , #{member_name}
               ,  #{member_email} , #{member_addr1} , #{member_addr2}
               , #{member_phone}
               , #{member_zonecode} ,5000,now(),'b')
    </insert>

    <update id="modify">
        update bec_member set  member_name=#{member_name},
                           member_phone=#{member_phone},
                           member_zonecode=#{member_zonecode},
                           member_addr1=#{member_addr1},
                           member_addr2=#{member_addr2}
        <include refid="pwdNull"/>
        where member_id=#{member_id}
    </update>

    <update id="modifyImage">
        update bec_member set member_img=#{arg1} where member_id=#{arg0}
    </update>

    <select id="view" resultType="org.fullstack4.springmvc.domain.MemberVO">
        select member_id, member_pwd, member_name, member_email, member_zonecode, member_addr1, member_addr2, member_phone, member_reg_date, member_type, member_img
        from bec_member
        where member_id=#{member_id}
    </select>



    <delete id="delete">
        delete from bec_member
        where member_id=#{member_id}
    </delete>

    <select id="getEmailCount" resultType="Integer">
        select count(email)
        from tbl_member
        where email=#{email}
    </select>

    <select id="getIdCount" resultType="Integer">
        select count(user_id)
        from tbl_member
        where user_id = #{user_id}
    </select>
    <select id="getCartList" resultType="org.fullstack4.springmvc.domain.CartVO">
        SELECT bc.cart_idx, bc.pro_title, bp.pro_price, bp.pro_amount, bc.pro_quantity, bc.pro_idx
        FROM bec_product as bp
        inner join bec_cart AS bc ON bp.pro_idx = bc.pro_idx
        WHERE member_id = #{m_id}
        <if test="cart_idx != null and cart_idx !=''">
            AND cart_idx in (${cart_idx})
        </if>
    </select>

    <select id="getQnaList" resultType="org.fullstack4.springmvc.domain.QnaVO">
        select qna_idx, member_id, qna_title, qna_content, qna_secret, qna_answer_YN, qna_category, qna_answer, qna_reg_date, qna_answer_date
        from bec_qna
        where member_id = #{arg0} and qna_category=#{arg1}
        <choose>
            <when test="#{arg2.sortDir} != null and #{arg2.sortDir} == 'ASC'.toString()">
                order by qna_idx asc
            </when>
            <otherwise>
                order by qna_idx desc
            </otherwise>
        </choose>
        limit #{arg2.page_skip_count}, #{arg2.page_size}
    </select>

    <select id="getOrderList" resultType="org.fullstack4.springmvc.domain.OrderVO">
        SELECT order_idx, o.pro_idx AS pro_idx, member_id, order_price, order_status, order_addr, order_date, pro_name
        FROM
            bec_order AS o
                INNER JOIN bec_product AS p ON o.pro_idx = p.pro_idx
        WHERE member_id=#{member_id}
        ORDER BY order_date desc
    </select>

    <update id="orderDelete">
        update bec_order
        set order_status='주문취소'
        where order_idx=#{order_idx}
    </update>

    <select id="getReviewList" resultType="org.fullstack4.springmvc.dto.ReviewDTO">
        SELECT review_idx, r.pro_idx AS pro_idx, member_id, review_title, review_content, review_star, review_reg_date, review_reg_date, pro_name
        FROM
            bec_review AS r
                INNER JOIN bec_product AS p ON r.pro_idx = p.pro_idx
        WHERE member_id=#{member_id}
        ORDER BY review_idx desc
    </select>

    <delete id="cartout">
        DELETE FROM bec_cart WHERE cart_idx in (${cart_idx})
    </delete>

    <insert id="insertOrder">
        INSERT INTO bec_order(member_id, order_total, deli_name, deli_addr, order_name, req_term, order_phone)
        VALUES(#{member_id}, #{order_total}, #{deli_name}, #{deli_addr}, #{order_name}, #{req_term}, #{order_phone})
    </insert>
    <select id="getorderidx" resultType="int">
        SELECT b.order_idx
        FROM bec_order b
                 LEFT JOIN bec_order_detail d ON b.order_idx = d.order_idx
        WHERE d.order_idx IS NULL AND b.member_id = #{member_id}
    </select>
    <insert id="insertOrderDetail" parameterType="list">
        INSERT INTO bec_order_detail(order_idx, pro_idx, pro_quantity)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.cart_idx}, #{item.pro_idx}, #{item.pro_quantity})
        </foreach>
    </insert>
    <update id="cartplus">
        UPDATE bec_cart SET
            pro_quantity = pro_quantity+1
        WHERE cart_idx = #{cartIdx}
    </update>
    <update id="cartminus">
        UPDATE bec_cart SET
            pro_quantity = pro_quantity-1
        WHERE cart_idx = #{cartIdx}
    </update>
</mapper>